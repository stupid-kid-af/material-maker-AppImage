{
	"name": "sdisocelestriangle",
	"node_position": {
		"x": 0,
		"y": 0
	},
	"parameters": {
		"cx": 0,
		"cy": 0,
		"h": 0.3,
		"w": 0.3
	},
	"seed": 0,
	"seed_locked": false,
	"shader_model": {
		"code": "",
		"global": "float sd_isosceles_triangle(vec2 uv, vec2 size)\n{\n    uv.x = abs(uv.x);\n\tuv.y += size.y; size.y *= 2.0;\n    vec2 a = uv - size*clamp(dot(uv,size)/dot(size,size), 0.0, 1.0);\n    vec2 b = uv - size*vec2(clamp(uv.x/size.x, 0.0, 1.0), 1.0);\n    float s = -sign(size.y);\n    vec2 d = min(vec2(dot(a,a), s*(uv.x*size.y-uv.y*size.x)),\n                 vec2(dot(b,b), s*(uv.y-size.y)));\n    return -sqrt(d.x)*sign(d.y);\n}",
		"inputs": [

		],
		"instance": "",
		"longdesc": "An isoceles triangle described as a signed distance function",
		"name": "sdIsocelesTriangle",
		"outputs": [
			{
				"longdesc": "The generated signed distance function",
				"sdf2d": "sd_isosceles_triangle($uv-vec2($cx+0.5, $cy+0.5), vec2($w, $h))",
				"shortdesc": "Output",
				"type": "sdf2d"
			}
		],
		"parameters": [
			{
				"control": "Rect1.x",
				"default": 0.5,
				"label": "Width",
				"longdesc": "The width of the triangle",
				"max": 1,
				"min": 0,
				"name": "w",
				"shortdesc": "Width",
				"step": 0.01,
				"type": "float"
			},
			{
				"control": "Rect1.y",
				"default": 1,
				"label": "Height",
				"longdesc": "The height of the triangle",
				"max": 1,
				"min": 0,
				"name": "h",
				"shortdesc": "Height",
				"step": 0.01,
				"type": "float"
			},
			{
				"control": "P1.x",
				"default": 0,
				"label": "Center X",
				"longdesc": "The position of the center of the triangle on the X axis",
				"max": 1,
				"min": -1,
				"name": "cx",
				"shortdesc": "Center.x",
				"step": 0.01,
				"type": "float"
			},
			{
				"control": "P1.y",
				"default": 0,
				"label": "Center Y",
				"longdesc": "The position of the center of the triangle on the Y axis",
				"max": 1,
				"min": -1,
				"name": "cy",
				"shortdesc": "Center.y",
				"step": 0.01,
				"type": "float"
			}
		],
		"shortdesc": "sdIsocelesTriangle"
	},
	"type": "shader"
}