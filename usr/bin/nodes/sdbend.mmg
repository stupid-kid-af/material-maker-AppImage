{
	"name": "sdbend",
	"node_position": {
		"x": 0,
		"y": 0
	},
	"parameters": {
		"r": 0.5
	},
	"seed": 0,
	"seed_locked": false,
	"shader_model": {
		"code": "",
		"global": "vec2 sdBend(vec2 uv, float r) {\n    const float k = 10.0;\n    float c = cos(r*uv.x);\n    float s = sin(r*uv.x);\n    mat2  m = mat2(vec2(c,-s),vec2(s,c));\n    return m*uv;\n}",
		"inputs": [
			{
				"default": "0.0",
				"label": "",
				"longdesc": "The input shape, defined as a signed distance function",
				"name": "in",
				"shortdesc": "Input",
				"type": "sdf2d"
			}
		],
		"instance": "",
		"longdesc": "Dilates an input shape into a rounded shape",
		"name": "sdBend",
		"outputs": [
			{
				"longdesc": "The shape generated by the operation",
				"sdf2d": "$in(sdBend($uv-vec2(0.5), $r)+vec2(0.5))",
				"shortdesc": "Output",
				"type": "sdf2d"
			}
		],
		"parameters": [
			{
				"control": "None",
				"default": 0,
				"label": "",
				"longdesc": "The length of the dilate operation",
				"max": 1,
				"min": 0,
				"name": "r",
				"shortdesc": "Radius",
				"step": 0.01,
				"type": "float"
			}
		],
		"shortdesc": "sdRoundedShape"
	},
	"type": "shader"
}